CBMC version 5.12 (cbmc-5.12) 64-bit x86_64 linux
Parsing simulate_seu.c
Converting
Type-checking simulate_seu
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
Unwinding loop p.0 iteration 1 file simulate_seu.c line 9 function p thread 0
Unwinding loop p.0 iteration 2 file simulate_seu.c line 9 function p thread 0
Unwinding loop p.0 iteration 3 file simulate_seu.c line 9 function p thread 0
Unwinding loop p.0 iteration 4 file simulate_seu.c line 9 function p thread 0
Unwinding loop p.0 iteration 5 file simulate_seu.c line 9 function p thread 0
Unwinding loop p.0 iteration 6 file simulate_seu.c line 9 function p thread 0
Unwinding loop p.0 iteration 7 file simulate_seu.c line 9 function p thread 0
Unwinding loop p_prime_x.0 iteration 1 file simulate_seu.c line 33 function p_prime_x thread 0
Unwinding loop p_prime_x.0 iteration 2 file simulate_seu.c line 33 function p_prime_x thread 0
Unwinding loop p_prime_x.0 iteration 3 file simulate_seu.c line 33 function p_prime_x thread 0
Unwinding loop p_prime_x.0 iteration 4 file simulate_seu.c line 33 function p_prime_x thread 0
Unwinding loop p_prime_x.0 iteration 5 file simulate_seu.c line 33 function p_prime_x thread 0
Unwinding loop p_prime_x.0 iteration 6 file simulate_seu.c line 33 function p_prime_x thread 0
Unwinding loop p_prime_x.0 iteration 7 file simulate_seu.c line 33 function p_prime_x thread 0
size of program expression: 385 steps
simple slicing removed 5 assignments
Generated 1 VCC(s), 1 remaining after simplification
Passing problem to propositional reduction
converting SSA
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.1 with simplifier
4315 variables, 11202 clauses
SAT checker: instance is SATISFIABLE
Runtime decision procedure: 0.0160819s
Building error trace

** Results:
simulate_seu.c function main
[main.assertion.1] line 66 CRV Result for x => if,SUCCESS then its not a CRV and if FAILURE then its a CRV!: FAILURE

Trace for main.assertion.1:

State 22 file simulate_seu.c function main line 55 thread 0
----------------------------------------------------
  output=0 (00000000 00000000 00000000 00000000)

State 23 file simulate_seu.c function main line 55 thread 0
----------------------------------------------------
  x=8 (00000000 00000000 00000000 00001000)

State 24 file simulate_seu.c function main line 55 thread 0
----------------------------------------------------
  y=-2147483647 (10000000 00000000 00000000 00000001)

State 27 file simulate_seu.c function main line 57 thread 0
----------------------------------------------------
  x=8 (00000000 00000000 00000000 00001000)

State 28 file simulate_seu.c function main line 57 thread 0
----------------------------------------------------
  y=-2147483647 (10000000 00000000 00000000 00000001)

State 29 file simulate_seu.c function p line 6 thread 0
----------------------------------------------------
  output=0 (00000000 00000000 00000000 00000000)

State 30 file simulate_seu.c function p line 6 thread 0
----------------------------------------------------
  output=4 (00000000 00000000 00000000 00000100)

State 31 file simulate_seu.c function p line 7 thread 0
----------------------------------------------------
  alarm=FALSE (00000000)

State 32 file simulate_seu.c function p line 7 thread 0
----------------------------------------------------
  alarm=FALSE (00000000)

State 33 file simulate_seu.c function p line 8 thread 0
----------------------------------------------------
  count=0 (00000000 00000000 00000000 00000000)

State 34 file simulate_seu.c function p line 8 thread 0
----------------------------------------------------
  count=0 (00000000 00000000 00000000 00000000)

State 37 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=5 (00000000 00000000 00000000 00000101)

State 38 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 39 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=1 (00000000 00000000 00000000 00000001)

State 43 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=6 (00000000 00000000 00000000 00000110)

State 44 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 45 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=2 (00000000 00000000 00000000 00000010)

State 49 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=7 (00000000 00000000 00000000 00000111)

State 50 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 51 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=3 (00000000 00000000 00000000 00000011)

State 55 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=8 (00000000 00000000 00000000 00001000)

State 56 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 57 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=4 (00000000 00000000 00000000 00000100)

State 61 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=9 (00000000 00000000 00000000 00001001)

State 62 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 63 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=5 (00000000 00000000 00000000 00000101)

State 67 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=10 (00000000 00000000 00000000 00001010)

State 68 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 69 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=6 (00000000 00000000 00000000 00000110)

State 73 file simulate_seu.c function p line 17 thread 0
----------------------------------------------------
  output=11 (00000000 00000000 00000000 00001011)

State 74 file simulate_seu.c function p line 18 thread 0
----------------------------------------------------
  alarm=TRUE (00000001)

State 75 file simulate_seu.c function p line 20 thread 0
----------------------------------------------------
  count=7 (00000000 00000000 00000000 00000111)

State 80 file simulate_seu.c function p line 22 thread 0
----------------------------------------------------
  format="alarm = %d\n" (00000010 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 86 file <builtin-library-printf> function printf line 19 thread 0
----------------------------------------------------
  va_args[0l]=(const void *)&va_arg!0 (00000011 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
alarm = 1


State 94 file simulate_seu.c function main line 57 thread 0
----------------------------------------------------
  output=11 (00000000 00000000 00000000 00001011)

State 95 file simulate_seu.c function main line 58 thread 0
----------------------------------------------------
  x_output=0 (00000000 00000000 00000000 00000000)

State 98 file simulate_seu.c function main line 58 thread 0
----------------------------------------------------
  x=8 (00000000 00000000 00000000 00001000)

State 99 file simulate_seu.c function main line 58 thread 0
----------------------------------------------------
  y=-2147483647 (10000000 00000000 00000000 00000001)

State 100 file simulate_seu.c function p_prime_x line 28 thread 0
----------------------------------------------------
  output=0 (00000000 00000000 00000000 00000000)

State 101 file simulate_seu.c function p_prime_x line 29 thread 0
----------------------------------------------------
  count=0 (00000000 00000000 00000000 00000000)

State 102 file simulate_seu.c function p_prime_x line 31 thread 0
----------------------------------------------------
  output=4 (00000000 00000000 00000000 00000100)

State 103 file simulate_seu.c function p_prime_x line 32 thread 0
----------------------------------------------------
  count=0 (00000000 00000000 00000000 00000000)

State 107 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 109 file simulate_seu.h function simulate_seu_main line 27 thread 0
----------------------------------------------------
  bit_pos=0 (00000000 00000000 00000000 00000000)

State 112 file simulate_seu.h function nondet_int_range_1_32 line 12 thread 0
----------------------------------------------------
  value=0 (00000000 00000000 00000000 00000000)

State 115 file simulate_seu.h function nondet_int_range_1_32 line 12 thread 0
----------------------------------------------------
  value=2 (00000000 00000000 00000000 00000010)

Assumption:
  file simulate_seu.h line 13 function nondet_int_range_1_32
  value >= 1 && value <= 32

State 119 file simulate_seu.h function simulate_seu_main line 27 thread 0
----------------------------------------------------
  bit_pos=2 (00000000 00000000 00000000 00000010)

State 122 file simulate_seu.h function simulate_seu_main line 28 thread 0
----------------------------------------------------
  value=8 (00000000 00000000 00000000 00001000)

State 123 file simulate_seu.h function simulate_seu_main line 28 thread 0
----------------------------------------------------
  bit_pos=2 (00000000 00000000 00000000 00000010)

State 124 file simulate_seu.h function simulate_seu line 18 thread 0
----------------------------------------------------
  mask=0 (00000000 00000000 00000000 00000000)

State 125 file simulate_seu.h function simulate_seu line 18 thread 0
----------------------------------------------------
  mask=4 (00000000 00000000 00000000 00000100)

Assumption:
  file simulate_seu.h line 19 function simulate_seu
  mask >= 1 && mask <= 32

State 129 file simulate_seu.h function simulate_seu_main line 28 thread 0
----------------------------------------------------
  x=12 (00000000 00000000 00000000 00001100)

State 130 file simulate_seu.h function simulate_seu_main line 29 thread 0
----------------------------------------------------
  count=1 (00000000 00000000 00000000 00000001)

State 134 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 136 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=1 (00000000 00000000 00000000 00000001)

State 141 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 146 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 148 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=2 (00000000 00000000 00000000 00000010)

State 153 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 158 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 160 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=3 (00000000 00000000 00000000 00000011)

State 165 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 170 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 172 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=4 (00000000 00000000 00000000 00000100)

State 177 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 182 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 184 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=5 (00000000 00000000 00000000 00000101)

State 189 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 194 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 196 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=6 (00000000 00000000 00000000 00000110)

State 201 file simulate_seu.c function p_prime_x line 35 thread 0
----------------------------------------------------
  invest_var=&x!0@1 (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 206 file simulate_seu.c function p_prime_x line 40 thread 0
----------------------------------------------------
  output=1 (00000000 00000000 00000000 00000001)

State 208 file simulate_seu.c function p_prime_x line 46 thread 0
----------------------------------------------------
  count=7 (00000000 00000000 00000000 00000111)

State 213 file simulate_seu.c function main line 58 thread 0
----------------------------------------------------
  x_output=1 (00000000 00000000 00000000 00000001)

State 214 file simulate_seu.c function main line 61 thread 0
----------------------------------------------------
  phi=0 (00000000 00000000 00000000 00000000)

State 215 file simulate_seu.c function main line 61 thread 0
----------------------------------------------------
  phi=0 (00000000 00000000 00000000 00000000)

State 216 file simulate_seu.c function main line 62 thread 0
----------------------------------------------------
  phi_prime_x=0 (00000000 00000000 00000000 00000000)

State 217 file simulate_seu.c function main line 62 thread 0
----------------------------------------------------
  phi_prime_x=1 (00000000 00000000 00000000 00000001)

Violated property:
  file simulate_seu.c function main line 66 thread 0
  CRV Result for x => if,SUCCESS then its not a CRV and if FAILURE then its a CRV!
  !((phi ^ phi_prime_x) != 0)



** 1 of 1 failed (2 iterations)
VERIFICATION FAILED
